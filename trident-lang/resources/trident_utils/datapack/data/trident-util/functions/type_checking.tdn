@on compile

local var assertType = function(obj, type) {
    do if(!isInstance(obj, type)) {
        throw "Expected " + type + ", instead got " + typeOf(obj)
    }
}

local var assertDualTypes = function(obj, type0, type1) {
    do if(!isInstance(obj, type0) && !isInstance(obj, type1)) {
        throw "Expected " + type0 + " or " + type1 + ", instead got " + typeOf(obj)
    }
}

local var assertTypes = function(obj, types) {
    for(type in types) {
        do if(isInstance(obj, type)) return
    }
    throw "Expected " + types + ", instead got " + typeOf(obj)
}

local var assertOneOf = function(obj, validTypes) {
    for(valid in validTypes) {
        do if(obj == valid) return
    }
    throw "Got " + obj + ", expected one of the following: " + validTypes
}
