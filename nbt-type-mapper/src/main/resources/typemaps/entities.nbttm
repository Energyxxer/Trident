$ENTITY: {
    id: String (type(entity)),
    
    Pos: [Double],
    Motion: [Double],
    Rotation: [Float],
    
    FallDistance: Float,
    Fire: Short,
    Air: Short,
    OnGround: Byte (boolean),
    NoGravity: Byte (boolean),
    Dimension: Int,
    Invulnerable: Byte (boolean),
    PortalCooldown: Int,
    
    UUIDMost: Long,
    UUIDLeast: Long,
    
    CustomName: String (text_component),
    CustomNameVisible: Byte (boolean),
    
    Silent: Byte (boolean),
    
    Passengers: [$ENTITY (protocol)],
    Glowing: Byte (boolean),
    
    Tags: [String]
}

#mobs
$ENTITY_MOB: {
    Health: Float,
    AbsorptionAmount: Float,
    HurtTime: Short,
    HurtByTimestamp: Int,
    DeathTime: Short,
    FallFlying: Byte (boolean),
    Attributes: [$ATTRIBUTE],
    ActiveEffects: [$EFFECT],
    HandItems: [$ITEM],
    ArmorItems: [$ITEM],
    HandDropChances: [Float],
    ArmorDropChances: [Float],
    DeathLootTable: String (resource_location),
    DeathLootTableSeed: Long,
    CanPickUpLoot: Byte (boolean),
    NoAI: Byte (boolean),
    PersistenceRequired: Byte (boolean),
    LeftHanded: Byte (boolean),
    Team: String (volatile),
    Leashed: Byte (boolean),
    Leash: {
        UUIDMost: Long,
        UUIDLeast: Long,
        X: Int,
        Y: Int,
        Z: Int
    }
}

#bat
$ENTITY_MINECRAFT_BAT: {
    BatFlags: Byte (boolean)
}

#blaze
#empty

#cat
$ENTITY_MINECRAFT_CAT: {
    CatType: Int,
    CollarColor: Byte
}
#cave_spider
#empty

#chicken
$ENTITY_MINECRAFT_CHICKEN: {
    IsChickenJockey: Byte (boolean),
    EggLayTime: Int
}

#cow
#empty

#creeper
$ENTITY_MINECRAFT_CREEPER: {
    powered: Byte (boolean),
    ExplosionRadius: Byte,
    Fuse: Short,
    ignited: Byte (boolean)
}

#dolphin
$ENTITY_MINECRAFT_DOLPHIN: {
    TreasurePosX: Int,
    TreasurePosY: Int,
    TreasurePosZ: Int,
    GotFish: Byte (boolean),
    CanFindTreasure: Byte (boolean)
}

$ENTITY_HORSELIKE: {
    Bred: Byte (boolean),
    EatingHaystack: Byte (boolean),
    Tame: Byte (boolean),
    Temper: Int,
    OwnerUUID: String (uuid),
    ArmorItem: $ITEM,
    SaddleItem: $ITEM,
    Variant: Int,
    ChestedHorse: Byte (boolean),
    Items: [$ITEM]
}

#donkey
$ENTITY_MINECRAFT_DONKEY: $ENTITY_HORSELIKE

$ENTITY_ZOMBIELIKE: {
    IsBaby: Byte (boolean),
    CanBreakDoors: Byte (boolean),
    DrownedConversionTime: Int,
    InWaterTime: Int
}

#drowned
$ENTITY_MINECRAFT_DROWNED: $ENTITY_ZOMBIELIKE

#elder_guardian
#empty

$ENTITY_MINECRAFT_ENDER_DRAGON: {
    DragonPhase: Int
}

#enderman
$ENTITY_MINECRAFT_ENDERMAN: {
    carriedBlockState: $BLOCK
}

#endermite
$ENTITY_MINECRCAFT_ENDERMITE: {
    LifeTime: Int,
    PlayerSpawned: Byte (boolean)
}

$ENTITY_ILLAGER: {
    HasRaidGoal: Byte (boolean),
    Patrolling: Byte (boolean),
    PatrolLeader: Byte (boolean),
    PatrolTarget: {
        X: Int,
        Y: Int,
        Z: Int
    },
    RaidId: Int,
    Wave: Int
}

#evoker
$ENTITY_MINECRAFT_EVOKER: {
    SpellTicks: Int
}
$ENTITY_MINECRAFT_EVOKER: $ENTITY_ILLAGER

#ghast
$ENTITY_MINECRAFT_GHAST: {
    ExplosionPower: Int
}

#giant
$ENTITY_MINECRAFT_GIANT: $ENTITY_ZOMBIELIKE

#guardian
#empty

#horse
$ENTITY_MINECRAFT_HORSE: $ENTITY_HORSELIKE

#husk
$ENTITY_MINECRAFT_HUSK: $ENTITY_ZOMBIELIKE

#illager_beast
$ENTITY_MINECRAFT_ILLAGER_BEAST: {
    AttackTick: Int,
    RoarTick: Int,
    StunTick: Int
}
$ENTITY_MINECRAFT_ILLAGER_BEAST: $ENTITY_ILLAGER

#illusioner
$ENTITY_MINECRAFT_ILLUSIONER: {
    SpellTicks: Int
}
$ENTITY_MINECRAFT_ILLUSIONER: $ENTITY_ILLAGER

#iron_golem
$ENTITY_MINECRAFT_IRON_GOLEM: {
    PlayerCreated: Byte (boolean)
}

#llama
$ENTITY_MINECRAFT_LLAMA: {
    Strength: Int,
    DecorItem: $ITEM
}
$ENTITY_MINECRAFT_LLAMA: $ENTITY_HORSELIKE

$ENTITY_SLIMELIKE: {
    Size: Int,
    wasOnGround: Byte (boolean)
}

#magma_cube
$ENTITY_MINECRAFT_MAGMA_CUBE: $ENTITY_SLIMELIKE

#mooshroom
#empty

#mule
$ENTITY_MINECRAFT_MULE: $ENTITY_HORSELIKE

#ocelot
$ENTITY_MINECRAFT_OCELOT: {
    Trusting: Byte (boolean)
}

#panda
$ENTITY_MINECRAFT_PANDA: {
    MainGene: String,
    HiddenGene: String
}

#parrot
$ENTITY_MINECRAFT_PARROT: {
    Variant: Int
}

#phantom
$ENTITY_MINECRAFT_PHANTOM: {
    AX: Int,
    AY: Int,
    AZ: Int,
    Size: Int
}

#pig
$ENTITY_MINECRAFT_PIG: {
    Saddle: Byte (boolean)
}

#pillager
$ENTITY_MINECRAFT_PILLAGER: {
    Inventory: [$ITEM]
}
$ENTITY_MINECRAFT_PILLAGER: $ENTITY_ILLAGER

#polar_bear
#empty

#rabbit
$ENTITY_MINECRAFT_RABBIT: {
    RabbitType: Int,
    MoreCarrotTicks: Int
}

#sheep
$ENTITY_MINECRAFT_SHEEP: {
    Sheared: Byte (boolean),
    Color: Byte
}

#shulker
$ENTITY_MINECRAFT_SHULKER: {
    Peek: Byte,
    AttachFace: Byte,
    Color: Byte,
    APX: Int,
    APY: Int,
    APZ: Int
}

#silverfish
#empty

#skeleton
#empty

#skeleton_horse
$ENTITY_MINECRAFT_SKELETON_HORSE: {
    SkeletonTrap: Byte (boolean),
    SkeletonTrapTime: Int
}
$ENTITY_MINECRAFT_SKELETON_HORSE: $ENTITY_HORSELIKE

#slime
$ENTITY_MINECRAFT_SLIME: $ENTITY_SLIMELIKE

#snow_golem
$ENTITY_MINECRAFT_SNOW_GOLEM: {
    Pumpkin: Byte (boolean)
}

#spider
#empty

#squid
#empty

#stray
#empty

#turtle
$ENTITY_MINECRAFT_TURTLE: {
    HasEgg: Byte (boolean),
    HomePosX: Int,
    HomePosY: Int,
    HomePosZ: Int,
    TravelPosX: Int,
    TravelPosY: Int,
    TravelPosZ: Int
}

#vex
$ENTITY_MINECRAFT_VEX: {
    BoundX: Int,
    BoundY: Int,
    BoundZ: Int,
    LifeTicks: Int
}

#villager
$ENTITY_MINECRAFT_VILLAGER: {
    Riches: Int,
    Willing: Byte (boolean),
    VillagerData: $VILLAGER_DATA,
    Inventory: [$ITEM],
    Offers: $VILLAGER_OFFERS
}

#vindicator
$ENTITY_MINECRAFT_VINDICATOR: {
    Johnny: Byte (boolean)
}
$ENTITY_MINECRAFT_VINDICATOR: $ENTITY_ILLAGER

#witch
$ENTITY_MINECRAFT_WITCH: $ENTITY_ILLAGER

#wither
$ENTITY_MINECRAFT_WITHER: {
    Invul: Int
}

#wither_skeleton
#empty

#wolf
$ENTITY_MINECRAFT_WOLF: {
    Angry: Byte (boolean),
    CollarColor: Byte
}

#zombie
$ENTITY_MINECRAFT_ZOMBIE: $ENTITY_ZOMBIELIKE

#zombie_horse
$ENTITY_MINECRAFT_ZOMBIE_HORSE: $ENTITY_HORSELIKE

#zombie_pigman
$ENTITY_MINECRAFT_ZOMBIE_PIGMAN: {
    Anger: Short,
    HurtBy: String (uuid)
}

#zombie_villager
$ENTITY_MINECRAFT_ZOMBIE_VILLAGER: {
    ConversionTime: Int,
    ConversionPlayerLeast: Long,
    ConversionPlayerMost: Long,
    VillagerData: $VILLAGER_DATA,
    Offers: $VILLAGER_OFFERS
}
$ENTITY_MINECRAFT_ZOMBIE_VILLAGER: $ENTITY_ZOMBIELIKE

#projectiles

$ENTITY_PROJECTILE: {
    xTile: Int,
    yTile: Int,
    zTile: Int,
    inBlockState: $BLOCK
}

$ENTITY_MINECRAFT_ARROW: {
    shake: Byte,
    pickup: Byte,
    player: Byte (boolean),
    life: Short,
    damage: Double,
    inGround: Byte (boolean),
    crit: Byte (boolean),
    ShotFromCrossbow: Byte (boolean),
    PierceLevel: Byte,
    SoundEvent: String,
    
    CustomPotionEffects: [$EFFECT],
    Potion: String (type(potion)),
    CustomPotionColor: Int
}

$ENTITY_MINECRAFT_DRAGON_FIREBALL: {
    direction: [Double],
    life: Int,
    power: [Double]
}

$ENTITY_MINECRAFT_EGG: {
    shake: Byte,
    owner: {
        L: Long,
        M: Long
    },
    Item: $ITEM
}

$ENTITY_MINECRAFT_ENDER_PEARL: {
    shake: Byte,
    owner: {
        L: Long,
        M: Long
    },
    Item: $ITEM
}

$ENTITY_MINECRAFT_EXPERIENCE_BOTTLE: {
    shake: Byte,
    owner: {
        L: Long,
        M: Long
    },
    Item: $ITEM
}

$ENTITY_MINECRAFT_FIREBALL: {
    direction: [Double],
    life: Int,
    power: [Double],
    Item: $ITEM,
    ExplosionPower: Int
}

$ENTITY_MINECRAFT_LLAMA_SPIT: {
    Owner: {
        OwnerUUIDMost: Long,
        OwnerUUIDLeast: Long
    }
}

$ENTITY_MINECRAFT_POTION: {
    shake: Byte,
    owner: {
        L: Long,
        M: Long
    },
    Potion: $ITEM
}

$ENTITY_MINECRAFT_SHULKER_BULLET: {
    Owner: {
        L: Long,
        M: Long,
        X: Int,
        Y: Int,
        Z: Int
    },
    Steps: Int,
    Target: {
        L: Long,
        M: Long,
        X: Int,
        Y: Int,
        Z: Int
    },
    TXD: Double,
    TYD: Double,
    TZD: Double
}

$ENTITY_MINECRAFT_SMALL_FIREBALL: {
    direction: [Double],
    life: Int,
    power: [Double],
    Item: $ITEM
}

$ENTITY_MINECRAFT_SNOWBALL: {
    shake: Byte,
    owner: {
        L: Long,
        M: Long
    },
    Potion: $ITEM
}

$ENTITY_MINECRAFT_SPECTRAL_ARROW: {
    shake: Byte,
    pickup: Byte,
    player: Byte (boolean),
    life: Short,
    damage: Double,
    inGround: Byte (boolean),
    crit: Byte (boolean),
    ShotFromCrossbow: Byte (boolean),
    PierceLevel: Byte,
    SoundEvent: String,
    Duration: Int
}

$ENTITY_MINECRAFT_TRIDENT: {
    shake: Byte,
    pickup: Byte,
    player: Byte (boolean),
    life: Short,
    damage: Double,
    inGround: Byte (boolean),
    crit: Byte (boolean),
    ShotFromCrossbow: Byte (boolean),
    PierceLevel: Byte,
    SoundEvent: String,
    Trident: $ITEM
}

$ENTITY_MINECRAFT_WITHER_SKULL: {
    direction: [Double],
    life: Int,
    power: [Double]
}

#items, xporbs:
$ENTITY_MINECRAFT_EXPERIENCE_ORB: {
    Age: Short,
    Health: Byte,
    Value: Short
}

$ENTITY_MINECRAFT_ITEM: {
    Age: Short,
    Health: Byte,
    PickupDelay: Short,
    owner: {
        L: Long,
        M: Long
    },
    Thrower: {
        L: Long,
        M: Long
    },
    Item: $ITEM
}

#vehicles

$ENTITY_MINECRAFT_BOAT: {
    Type: String
}

$ENTITY_MINECART: {
    CustomDisplayTile: Byte (boolean),
    DisplayState: $BLOCK,
    DisplayOffset: Int
}

#minecart
#empty

#chest_minecart
$ENTITY_MINECRAFT_CHEST_MINECART: {
    Items: [$ITEM],
    LootTable: String,
    LootTableSeed: Long
}

#command_block_minecart
$ENTITY_MINECRAFT_COMMAND_BLOCK_MINECART: {
    Command: String,
    SuccessCount: Int,
    LastOutput: String (text_component),
    TrackOutput: Byte (boolean)
}

#furnace_minecart
$ENTITY_MINECRAFT_FURNACE_MINECART: {
    PushX: Double,
    PushZ: Double,
    Fuel: Short
}

#hopper_minecart
$ENTITY_MINECRAFT_CHEST_MINECART: {
    Items: [$ITEM],
    TransferCooldown: Int,
    Enabled: Byte (boolean),
    LootTable: String,
    LootTableSeed: Long
}

#tnt_minecart
$ENTITY_MINECRAFT_TNT_MINECART: {
    TNTFuse: Int
}

#spawner_minecart
$ENTITY_MINECRAFT_SPAWNER_MINECART: $SPAWNER

#falling tiles
#falling_block
$ENTITY_MINECRAFT_FALLING_BLOCK: {
    TileEntityData: $BLOCK_ENTITY (protocol),
    BlockState: $BLOCK,
    Time: Int,
    DropItem: Byte (boolean),
    HurtEntities: Byte (boolean),
    FallHurtMax: Int,
    FallHurtAmount: Float
}

#tnt
$ENTITY_MINECRAFT_TNT: {
    Fuse: Short
}

#area_effect_cloud
$ENTITY_MINECRAFT_AREA_EFFECT_CLOUD: {
    Age: Int,
    Color: Int,
    Duration: Int,
    ReapplicationDelay: Int,
    WaitTime: Int,
    DurationOnUse: Int,
    OwnerUUIDLeast: Long,
    OwnerUUIDMost: Long,
    Radius: Float,
    RadiusOnUse: Float,
    RadiusPerTick: Float,
    Particle: String (full_particle),
    Potion: String (type(potion)),
    Effects: [$EFFECT]
}

#armor_stand
$ENTITY_MINECRAFT_ARMOR_STAND: {
    DisabledSlots: Int,
    HandItems: [$ITEM],
    ArmorItems: [$ITEM],
    Marker: Byte (boolean),
    Invisible: Byte (boolean),
    NoBasePlate: Byte (boolean),
    FallFlying: Byte (boolean),
    Pose: {
        Head: [Float],
        Body: [Float],
        LeftArm: [Float],
        RightArm: [Float],
        LeftLeg: [Float],
        RightLeg: [Float]
    },
    ShowArms: Byte (boolean),
    Small: Byte (boolean)
}

#end_crystal
$ENTITY_MINECRAFT_END_CRYSTAL: {
    ShowBottom: Byte (boolean),
    BeamTarget: {
        X: Int,
        Y: Int,
        Z: Int
    }
}

#evoker_fangs
$ENTITY_MINECRAFT_EVOKER_FANGS: {
    Warmup: Int,
    Owner: {
        OwnerUUIDLeast: Long,
        OwnerUUIDMost: Long
    }
}

#eye_of_ender
$ENTITY_MINECRAFT_EYE_OF_ENDER: {
    Item: $ITEM
}

#firework_rocket
$ENTITY_MINECRAFT_FIREWORK_ROCKET: {
    Life: Int,
    LifeTime: Int,
    ShotAtAngle: Byte (boolean),
    FireworksItem: $ITEM
}

#item_frame
$ENTITY_MINECRAFT_ITEM_FRAME: {
    TileX: Int,
    TileY: Int,
    TileZ: Int,
    Facing: Byte,
    Item: $ITEM,
    ItemDropChance: Float,
    ItemRotation: Byte
}

#painting
$ENTITY_MINECRAFT_PAINTING: {
    TileX: Int,
    TileY: Int,
    TileZ: Int,
    Facing: Byte,
    Motive: String (type(motive))
}

#fishing_bobber
#empty

#breedable
$ENTITY_BREEDABLE: {
    InLove: Int,
    Age: Int,
    ForcedAge: Int,
    LoveCauseLeast: Long,
    LoveCauseMost: Long
}

$ENTITY_TAMABLE: {
    OwnerUUID: String (uuid),
    Sitting: Byte (boolean)
}

#player
$ENTITY_MINECRAFT_PLAYER: {
    DataVersion: Int,
    playerGameType: Int,
    Score: Int,
    SelectedItemSlot: Int,
    SelectedItem: $ITEM,
    SpawnX: Int,
    SpawnY: Int,
    SpawnZ: Int,
    SpawnForced: Byte (boolean),
    Sleeping: Byte (boolean),
    SleepTimer: Short,
    foodLevel: Int,
    foodExhaustionLevel: Float,
    foodSaturationLevel: Float,
    foodTickTimer: Int,
    XpLevel: Int,
    XpP: Float,
    XpTotal: Int,
    XpSeed: Int,
    Inventory: [$ITEM],
    EnderItems: [$ITEM],
    abilities: {
        walkSpeed: Float (boolean),
        flySpeed: Float (boolean),
        mayFly: Byte (boolean),
        flying: Byte (boolean),
        invulnerable: Byte (boolean),
        mayBuild: Byte (boolean),
        instabuild: Byte (boolean)
    },
    enteredNetherPosition: {
        x: Double,
        y: Double,
        z: Double
    },
    RootVehicle: {
        AttachLeast: Long,
        AttachMost: Long,
        Entity: $ENTITY (protocol)
    },
    ShoulderEntityLeft: $ENTITY (protocol),
    ShoulderEntityRight: $ENTITY (protocol),
    seenCredits: Byte (boolean),
    recipeBook: {
        recipes: [String (resource_location)],
        toBeDisplayed: [String (resource_location)],
        isFilteringCraftable: Byte (boolean),
        isGuiOpen: Byte (boolean)
    }
}
